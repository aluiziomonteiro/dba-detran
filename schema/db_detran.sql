/* Criar um banco de dados chamado db_detran, conforme o modelo abaixo, criaraschaves primarias
 de cada tabela e também as chaves estrangeiras*/
 
/*DROP DATABASE db_detran;*/
CREATE DATABASE db_detran;
USE db_detran;

CREATE TABLE ESTADO (
	ID_ESTADO INT NOT NULL PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL);
 
CREATE TABLE MUNICIPIO (
	ID_MUNICIPIO INT NOT NULL PRIMARY KEY,
	NOME_MUNICIPIO VARCHAR(150) NOT NULL,
	FK_ESTADO INT NOT NULL,
	foreign key (FK_ESTADO) REFERENCES ESTADO (ID_ESTADO) );

SELECT * FROM ESTADO;

INSERT INTO ESTADO(ID_ESTADO, NOME) VALUES (1, 'DF');
INSERT INTO ESTADO (ID_ESTADO, NOME) VALUES (2, 'GO');
INSERT INTO ESTADO (ID_ESTADO, NOME) VALUES (3, 'SP'); 
INSERT INTO ESTADO (ID_ESTADO, NOME) VALUES (4, 'MG'); 
INSERT INTO ESTADO (ID_ESTADO, NOME) VALUES (5, 'RJ');

INSERT INTO MUNICIPIO (ID_MUNICIPIO, NOME_MUNICIPIO, FK_ESTADO) VALUES ('100','SOBRADINHO','1'); 
INSERT INTO MUNICIPIO (ID_MUNICIPIO, NOME_MUNICIPIO, FK_ESTADO) VALUES ('200','PLANALTINA','1');
INSERT INTO MUNICIPIO (ID_MUNICIPIO, NOME_MUNICIPIO, FK_ESTADO) VALUES ('300','PLANALTINA','2');
INSERT INTO MUNICIPIO (ID_MUNICIPIO, NOME_MUNICIPIO, FK_ESTADO) VALUES ('400','BELO HORIZONTE','4');
INSERT INTO MUNICIPIO (ID_MUNICIPIO, NOME_MUNICIPIO, FK_ESTADO) VALUES ('333','SAO PAULO','3'); 
INSERT INTO MUNICIPIO (ID_MUNICIPIO, NOME_MUNICIPIO, FK_ESTADO) VALUES ('350','CAMPINAS','3');
INSERT INTO MUNICIPIO (ID_MUNICIPIO, NOME_MUNICIPIO, FK_ESTADO) VALUES ('360','SANTO ANDRE','3');

SELECT * FROM ESTADO;
SELECT * FROM MUNICIPIO;

CREATE TABLE CATEGORIA (
	ID_CATEGORIA INT NOT NULL PRIMARY KEY,
	CATEGORIA_VEICULO VARCHAR(45) NOT NULL
	);

INSERT INTO CATEGORIA (ID_CATEGORIA, CATEGORIA_VEICULO) VALUES (1, "Sedan");
INSERT INTO CATEGORIA (ID_CATEGORIA, CATEGORIA_VEICULO) VALUES (2, "PickUp");
INSERT INTO CATEGORIA (ID_CATEGORIA, CATEGORIA_VEICULO) VALUES (3, "SUV");
INSERT INTO CATEGORIA (ID_CATEGORIA, CATEGORIA_VEICULO) VALUES (4, "Sedan");
INSERT INTO CATEGORIA (ID_CATEGORIA, CATEGORIA_VEICULO) VALUES (5, "Conversível");

SELECT * FROM CATEGORIA;



CREATE TABLE MARCA (
	ID_MARCA INT NOT NULL PRIMARY KEY,
    NOME_MARCA VARCHAR(60)
    );

INSERT INTO MARCA (ID_MARCA, NOME_MARCA) VALUES ('1','AUDI'), 
	('2', 'FIAT'), 
	('3','GM'), 
	('4','FORD'), 
	('5','HYUNDAI'), 
	('6','VW');
 
SELECT * FROM MARCA;

CREATE TABLE PROPRIETARIO (
	ID_DONO INT NOT NULL PRIMARY KEY,
	NOME_DONO VARCHAR(50) NOT NULL,
	ENDERECO VARCHAR(100) NOT NULL,
    BAIRRO VARCHAR(45),
    CPF VARCHAR(14) ,
    TELEFONE VARCHAR(45),
    RG VARCHAR(45),
	DT_NASCIMENTO DATE);
    
INSERT INTO PROPRIETARIO 
(ID_DONO,NOME_DONO,ENDERECO,BAIRRO,CPF,TELEFONE,RG,DT_NASCIMENTO) 
VALUES (1,'João Melo','Q 14','Sobradinho','51539524876','99841010','2487','1985-10-10'),
	(2,'Paulo Fernandes','SQS 210','asa Sul','59585906856','98141100','3210','1996-02-05'),
	(3,'Ricardo Alves','Q 08','Sobradinho','98720121997','984147750','0614','1965-10-05'),
    (4,'Patrícia Lima','Q 11','Sobradinho','79337512610','992925050','3020','1960-02-15'),
    (5,'Lívia Antunes','SQN 116','ASa Norte','41848579063','99872020','1200','1978-07-14'); 
    
SELECT * FROM PROPRIETARIO;

ALTER TABLE PROPRIETARIO MODIFY column NOME_DONO VARCHAR(100);

CREATE TABLE VEICULO (
	ID_VEICULO INT NOT NULL PRIMARY KEY,
	PLACA VARCHAR(10) NOT NULL,
    ANO YEAR,
	FK_PROPRIETARIO INT NOT NULL,
    FK_MARCA INT NOT NULL,
    FK_CATEGORIA INT NOT NULL,
    FK_MUNICIPIO INT NOT NULL,
	FOREIGN KEY (FK_PROPRIETARIO) REFERENCES PROPRIETARIO(ID_DONO) ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (FK_MARCA) REFERENCES MARCA(ID_MARCA) ON DELETE NO ACTION ON UPDATE NO ACTION,
	FOREIGN KEY (FK_CATEGORIA) REFERENCES CATEGORIA(ID_CATEGORIA) ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (FK_MUNICIPIO) REFERENCES MUNICIPIO(ID_MUNICIPIO) ON DELETE NO ACTION ON UPDATE NO ACTION
    );

SELECT * FROM VEICULO;
    

/* 2)	Quantos ESTADOS tem cadastrado*/

SELECT count(NOME) FROM ESTADO; 
SELECT * FROM ESTADO; 
 
 
 /* 3)	Listar a PLACA, ANO e CATEGORIA dos carros cadastrados*/
 
SELECT VEICULO.PLACA , VEICULO.ANO, CATEGORIA.CATEGORIA_VEICULO
	FROM VEICULO, CATEGORIA
    WHERE CATEGORIA.ID_CATEGORIA = VEICULO.FK_CATEGORIA;
    
/*EXPLICAÇÃO */
/*
SELECT <COLUNAS>
    FROM <TABELAS>      __ JOIN __ ON
 WHERE <CONDIÇÃO PARA LINHAS>
 GROUP BY <AGRUPAR>
 HAVING <CONDIÇÃO PARAasFUNÇOES AGREGADORAS COUNT,SUM,MAX,MIN,AVG>
 ORDER BY*/
 
/* 2)	Quantos ESTADOs tem cadastrado */

SELECT count(ID_ESTADO)
FROM ESTADO;

/*3)	Listar a PLACA, ANO e CATEGORIA dos carros cadastrados*/

SELECT PLACA, ANO, CATEGORIA_VEICULO
	FROM VEICULO, CATEGORIA
	WHERE ID_CATEGORIA= VEICULO.FK_CATEGORIA;
/*ou*/
SELECT PLACA, ANO, CATEGORIA_VEICULO
	FROM VEICULO, CATEGORIA
	WHERE ID_CATEGORIA= FK_CATEGORIA;

/*4)	Listar quantos carros tem de cada CATEGORIA, obs. CATEGORIA com nenhum carro cadastrado devem 
aparecer na listagem por ordem crescente de quantIDade de carros*/

SELECT CATEGORIA_VEICULO, count(PLACA)
	FROM VEICULO , CATEGORIA
	WHERE ID_CATEGORIA=VEICULO.FK_CATEGORIA
	GROUP BY CATEGORIA_VEICULO
	ORDER BY count(PLACA);

/* mostrando com os que não tem nehum*/
SELECT CATEGORIA_VEICULO, count(PLACA)
	FROM VEICULO 
    RIGHT JOIN CATEGORIA
	on ID_CATEGORIA=VEICULO.FK_CATEGORIA
	GROUP BY CATEGORIA_VEICULO
	ORDER BY count(PLACA);

 /* 5)	Listar quantos carros tem de cada MARCA, obs. MARCAS com nenhum carro cadastrado 
devem aparecer na listagem por ordem alfabética de MARCAS - semana que vem JOIN */
/* 5)	Listar quantos carros tem de cada MARCA    */

SELECT NOME_MARCA, count(PLACA)as'total_por_MARCA'
	FROM MARCA, VEICULO
    WHERE ID_MARCA = FK_MARCA
    GROUP BY NOME_MARCA
    ORDER BY count(PLACA) DESC;
    
/*6)	Quantos municípios tem cadastrados por NOME ESTADO em ordem alfabética por NOME ESTADO*/
SELECT NOME, count(ID_MUNICIPIO)
FROM ESTADO, MUNICIPIO
WHERE ID_ESTADO = MUNICIPIO.FK_ESTADO
GROUP BY (NOME);

SELECT * FROM MUNICIPIO;


/* colocar chave estrangeira em tabela já criada - ALTER TABLE add foreign key */

/* 7)	Listar os ESTADOs que não tem municípios cadastrados - Pular */ 

/* 8)	Listar o NOME do proprietário e a PLACA do carro e ANO      */ 
SELECT NOME_DONO, PLACA, ANO
	FROM VEICULO, PROPRIETARIO
    WHERE ID_DONO=FK_PROPRIETARIO;

/* 9)	Listar o NOME do proprietário e a PLACA do carro, ANO e MARCA    */
SELECT NOME_DONO, PLACA, ANO, NOME_MARCA
	FROM VEICULO, PROPRIETARIO, MARCA
	WHERE ID_DONO = VEICULO.FK_PROPRIETARIO
    AND ID_MARCA= VEICULO.FK_MARCA;
    
SELECT NOME_DONO, PLACA, ANO, NOME_MARCA
	FROM VEICULO, PROPRIETARIO, MARCA
    WHERE ID_DONO = FK_PROPRIETARIO 
    AND ID_MARCA = FK_MARCA;
    
/*    10)	Listar todos os carros de 2015 */
SELECT * FROM VEICULO WHERE ANO=2015;

/* 11)	Listar todos os proprietários que tem carros da MARCA HYUNDAI */
SELECT NOME_DONO
	FROM PROPRIETARIO, VEICULO, MARCA
	WHERE ID_DONO=VEICULO.FK_PROPRIETARIO
	AND ID_MARCA=VEICULO.FK_MARCA
    AND NOME_MARCA='HYUNDAI';
    
/*13)	Listar quantos carros cada proprietário tem*/
 
 SELECT NOME_DONO, count(PLACA)asTOTAL_CARROS
 FROM PROPRIETARIO, VEICULO
 WHERE ID_DONO=VEICULO.FK_PROPRIETARIO
 GROUP BY NOME_DONO
 ORDER BY count(PLACA);
 
 /*14)	Listar o NOME do proprietário do carro mais velho/
    
/* todos os NOMEs de PROPRIETARIOs*/
SELECT NOME_DONO
	FROM PROPRIETARIO;
    
/* todos os NOMEs de PROPRIETARIOs carro mais antigo*/
SELECT NOME_DONO, ANO
	FROM PROPRIETARIO, VEICULO
    WHERE ID_DONO = VEICULO.FK_PROPRIETARIO
    AND ANO=(SELECT min(VEICULO.ANO) FROM VEICULO);

/*15)   Listar o NOME do proprietário do carro mais novo*/
SELECT NOME_DONO, ANO
FROM PROPRIETARIO, VEICULO
WHERE ID_DONO = VEICULO.FK_PROPRIETARIO
AND ANO=(SELECT max(VEICULO.ANO) FROM VEICULO);

    
/* 17)	Listar os proprietários que não tem carro cadastrado    - excluir usa JOIN */

/* 18)	Excluir o carro JEX1010 */
delete FROM VEICULO WHERE PLACA='JEX1010'; -- não dá certo pois tá com safe ligado, é bom não delisgar safe
SELECT * FROM VEICULO;

SELECT ID_VEICULO, PLACA FROM VEICULO WHERE PLACA = 'JEX1010';

DELETE FROM VEICULO WHERE ID_VEICULO = '1';
SELECT * FROM VEICULO;

/*    19)	ALTERa o endereço da Lívia para ASa Sul    */
SELECT * FROM PROPRIETARIO;
	
UPDATE PROPRIETARIO 
	SET BAIRRO = 'ASa Sul'
    WHERE ID_DONO = 5; 

/*    20)	Excluir a MARCA VW. Aconteceu algum problema? Explique o que aconteceu. */
SELECT * FROM MARCA;
DELETE FROM MARCA WHERE ID_MARCA = 6;
/* ERRO DE INTEGRIDADE REFERENCIAL, OU SEJA, NÃO PODE APAGAR O REGISTRO PAI*/
SELECT * FROM VEICULO;
/*21)	ALTERar o ANO do carro PAZ1015 para 2016*/
UPDATE VEICULO
	SET ANO = '2015'
	WHERE PLACA = 'PAZ1015'; -- não dá certo pois tá com safe ligado, é bom não delisgar safe
    /*
ALTER TABLE = ALTERA A ESTRUTURA DA TABELA

16:48
ADICIONAR COLUNA

16:48
APAGAR COLUNA

16:48
RENOMEAR COLUNA

16:49
MUDAR OS TIPOS DE DADOS DA COLUNA

16:49
UPDATE ALTERA OS DADOS DA TABELA

16:49
ALTERAR ENDERECO DE UMA PESSOA

16:49
ALTERAR TELEFONE DE UMA PESSOA

16:50
ALTERAR A SENHA
*/ 
/*22)	ALTERar NOME e endereço da Patrícia Lima*/

SELECT * FROM PROPRIETARIO; 

/*ALTERar NOME e endereço da Patrícia Lima*/
UPDATE PROPRIETARIO 
	SET NOME_DONO = 'Patrícia de Sousa Lima',
    ENDERECO = 'Q 30 Conjunto 2 cASa 9'
    WHERE ID_DONO = 4;
    
/* como eu faço para apaga a foreign key referente à coluna FK_MARCA da tabela VEICULO..?
ALTER TABLE XXXX DROP FOREIGN KEY MMMM */ 

/* MYSQL - Funções nativAS*/
SELECT curdate(); -- selecionar a data do Sistema Operacional
SELECT now(); -- selecionar a hora do SO
SELECT * FROM PROPRIETARIO;
 
SELECT NOME_DONO, YEAR(DT_NASCIMENTO)asANO
	FROM PROPRIETARIO;
 
 /*23) Selecione o NOME e a IDade de todos os proprietários de carro*/
SELECT NOME_DONO, TIMESTAMPDIFF(YEAR,ID_DONO,curdate())asIDade
	FROM PROPRIETARIO;
    